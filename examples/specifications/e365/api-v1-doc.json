{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Инструментарий для интеграции ELMA365 со сторонними системами.",
    "title": "Публичное API",
    "version": "1.0.1.dev"
  },
  "host": "company.elma365.zone",
  "basePath": "/pub/v1",
  "paths": {
    "/app/{namespace}/{code}/create": {
      "post": {
        "description": "Создание элемента Приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appItemCreate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "Код Раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Code",
            "description": "Код Приложения Раздела",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "description": "Поля создаваемого элемента",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "x-go-name": "Context"
                },
                "statusGroupId": {
                  "$ref": "#/definitions/UUID"
                },
                "withEventForceCreate": {
                  "description": "Признак принудительного создания события о создании элемента",
                  "type": "boolean",
                  "x-go-name": "WithEventForceCreate"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppItemCreateResponse"
          }
        }
      }
    },
    "/app/{namespace}/{code}/get": {
      "get": {
        "description": "Получение Приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appGetGET",
        "parameters": [
          {
            "type": "string",
            "description": "Код раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Код приложения",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppGetResponse"
          }
        }
      },
      "post": {
        "description": "Получение Приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appGet",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "description": "Код раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Код приложения",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppGetResponse"
          }
        }
      }
    },
    "/app/{namespace}/{code}/list": {
      "get": {
        "description": "Получение списка элементов Приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appListGET",
        "parameters": [
          {
            "type": "string",
            "description": "Код раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Код приложения",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Параметры запроса списка, в форме JSON сериализованной строки",
            "name": "listparams",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppListResponse"
          }
        }
      },
      "post": {
        "description": "Получение списка элементов Приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "Код Раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Code",
            "description": "Код Приложения",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "description": "Показывать только активные (не удаленные)",
                  "type": "boolean",
                  "x-go-name": "Active"
                },
                "filter": {
                  "description": "Фильтрация",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "x-go-name": "Filter"
                },
                "from": {
                  "description": "Возвращать начиная с элемента",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "From"
                },
                "ids": {
                  "description": "Фильтрация по идентификаторам",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "Ids"
                },
                "size": {
                  "description": "Количество возвращаемых элементов (максимум 100)",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Size"
                },
                "sortExpressions": {
                  "description": "Правила сортировки",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SortExpression"
                  },
                  "x-go-name": "SortExpressions"
                },
                "statusCode": {
                  "description": "Показывать элементы определенных статусов",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "StatusCodes"
                },
                "statusGroupId": {
                  "$ref": "#/definitions/UUID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppListResponse"
          }
        }
      }
    },
    "/app/{namespace}/{code}/settings/status": {
      "get": {
        "description": "Получение статуса Приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appGetStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Код раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Код приложения",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/appGetStatusResponse"
          },
          "400": {
            "$ref": "#/responses/appGetStatusResponse"
          }
        }
      }
    },
    "/app/{namespace}/{code}/{id}/get": {
      "get": {
        "description": "Получение элемента Приложения по идентификатору",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appItemGetGET",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "Код Раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Code",
            "description": "Код Приложения Раздела",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентификатор элемента Приложения",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppItemGetResponse"
          }
        }
      },
      "post": {
        "description": "Получение элемента Приложения по идентификатору",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appItemGet",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "Код Раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Code",
            "description": "Код Приложения Раздела",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентификатор элемента Приложения",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppItemGetResponse"
          }
        }
      }
    },
    "/app/{namespace}/{code}/{id}/set-status": {
      "post": {
        "description": "Установка статуса элемента приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appItemSetStatus",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "Код Раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Code",
            "description": "Код Приложения Раздела",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентификатор элемента",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "description": "Пареметры нового статуса",
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Код статуса",
                      "type": "string",
                      "x-go-name": "Code"
                    }
                  },
                  "x-go-name": "Status"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppItemSetStatusResponse"
          }
        }
      }
    },
    "/app/{namespace}/{code}/{id}/update": {
      "post": {
        "description": "Изменение элемента Приложения",
        "produces": [
          "application/json"
        ],
        "tags": [
          "app"
        ],
        "operationId": "appItemUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "Код Раздела",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Code",
            "description": "Код Приложения Раздела",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентификатор элемента",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "description": "Изменяемые значения",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "x-go-name": "Context"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AppItemUpdateResponse"
          }
        }
      }
    },
    "/bpm/instance/bytarget/list": {
      "get": {
        "description": "Получить список экземпляров процесса для цели",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmInstanceTargetListGET",
        "parameters": [
          {
            "type": "string",
            "description": "Параметры запроса списка, в форме JSON сериализованной строки",
            "name": "listparams",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmInstanceTargetListResponse"
          }
        }
      },
      "post": {
        "description": "Получить список экземпляров процесса для цели",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmInstanceTargetList",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "description": "Показывать только активные (не удаленные)",
                  "type": "boolean",
                  "x-go-name": "Active"
                },
                "from": {
                  "description": "Возвращать начиная с элемента",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "From"
                },
                "size": {
                  "description": "Количество возвращаемых элементов (максимум 100)",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Size"
                },
                "sortExpressions": {
                  "description": "Правила сортировки",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SortExpression"
                  },
                  "x-go-name": "SortExpressions"
                },
                "target": {
                  "description": "Внешний идентификатор объекта",
                  "type": "string",
                  "x-go-name": "Target"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmInstanceTargetListResponse"
          }
        }
      }
    },
    "/bpm/instance/bytemplateid/{id}/list": {
      "get": {
        "description": "Получить список экземпляров процесса",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmInstanceListGET",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор шаблона процесса",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Параметры запроса списка, в форме JSON сериализованной строки, аналогично POST варианту запроса.",
            "name": "listparams",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmInstanceListResponse"
          }
        }
      },
      "post": {
        "description": "Получить список экземпляров процесса",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bmpInstanceList",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентифкатор шаблона",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "active": {
                  "description": "Показывать только активные (не удаленные)",
                  "type": "boolean",
                  "x-go-name": "Active"
                },
                "filter": {
                  "description": "Фильтрация",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "x-go-name": "Filter"
                },
                "from": {
                  "description": "Возвращать начиная с элемента",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "From"
                },
                "ids": {
                  "description": "Фильтрация по идентификаторам",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "Ids"
                },
                "size": {
                  "description": "Количество возвращаемых элементов (максимум 100)",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Size"
                },
                "sortExpressions": {
                  "description": "Правила сортировки",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SortExpression"
                  },
                  "x-go-name": "SortExpressions"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmInstanceListResponse"
          }
        }
      }
    },
    "/bpm/instance/{id}/get": {
      "get": {
        "description": "Получение экземпляра процесса по идентификатору",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmInstanceGetGET",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентификатор экземпляра процесса",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmInstanceGetResponse"
          }
        }
      },
      "post": {
        "description": "Получение экземпляра процесса по идентификатору",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmInstanceGet",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентификатор экземпляра процесса",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmInstanceGetResponse"
          }
        }
      }
    },
    "/bpm/restore-point/{id}/restore": {
      "post": {
        "description": "Продолжения делегированного действия по идентификатору",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmRestorePointRestore",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "Идентификатор точки восстановления",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Данные для маппинга в контекст восстанавливаемого экземпляра процесса",
                  "type": "object",
                  "x-go-name": "Data"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmRestorePointRestoreResponse"
          }
        }
      }
    },
    "/bpm/template/list": {
      "post": {
        "description": "Получение списка опубликованных процессов в разделе",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmTemplateList",
        "responses": {
          "200": {
            "$ref": "#/responses/BpmTemplateListResponse"
          }
        }
      }
    },
    "/bpm/template/{namespace}/{code}/run": {
      "post": {
        "description": "Запуск процесса по идентификатору шаблона",
        "produces": [
          "application/json"
        ],
        "tags": [
          "bpm"
        ],
        "operationId": "bpmTemplateRun",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Namespace",
            "description": "Код раздела процесса",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Code",
            "description": "Код процесса",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "context": {
                  "$ref": "#/definitions/context"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/BpmTemplateRunResponse"
          }
        }
      }
    },
    "/disk/directory/{ID}/upload": {
      "post": {
        "description": "Загрузка файла в директорию, которая указана в идентификаторе.\nВ результате файл будет перемещен в нужную директорию, для этого должно хватать места на диске.\nЕсли в директории уже есть файл с подобным именем, к имени будет добавлен постфикс в виде цифры - (1) и тд.\nДля загрузки необходимо сгенерировать uuid и передать его в качестве уникального хеш значения для тела файла.\nДля загрузки файла целиком передается заголовок Content-Range: 0-1000/1000 и загружается полностью.\nВозможно загрузка по частям, для этого файл должен быть разбит на равные части не меньше 5 мегабайт,\nкроме последней, остаток может иметь любой размер.\nОповестить сервер о том, какая из частей загружается можно заголовком Content-Range.\nЗаголовок задается по шаблону: \u003cb\u003ebytes \u003crange-start\u003e-\u003crange-end\u003e\\/\\\u003csize\u003e\u003c/b\u003e, например:\nbytes: 0-100/1000 для загрузки первой части в сто байт для файла размером 1000 байт и 101-200/1000\nдля загрузки второй части файла.",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "disk"
        ],
        "summary": "Загрузка файла в директорию",
        "operationId": "uploadToDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор папки",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Идентификатор тела файла",
            "name": "Hash",
            "in": "query",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "File": {
                  "description": "Загружаемый файл",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "uint8"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Файл загружен полностью"
          },
          "206": {
            "description": "Часть файла загружена успешно"
          },
          "400": {
            "description": "Ошибка отображается в формате сообщения, описывающего проблему. Также текст ошибки может содержать следующие коды EntityTooSmall файл разбит на слишком маленькие части, InvalidPart одна из частей не найдена в хранилище, InvalidPartOrder неверный порядок частей в файле, NoSuchUpload загрузка не найдена"
          },
          "402": {
            "description": "на диске закончилось место"
          },
          "403": {
            "description": "доступ для создания файла запрещен"
          },
          "default": {
            "$ref": "#/responses/DiskFileUploadResponse"
          }
        }
      }
    },
    "/disk/file/move": {
      "post": {
        "description": "В случае если файл загружен, но не инициализирован, выполняется сохранение файла в директорию с указанным именем.\nЕсли в директории уже есть файл с подобным именем, к имени будет добавлен постфикс в виде цифры - (1) и тд.\nДля инициализированных файлов выполняется перенос в новую директорию.",
        "tags": [
          "disk"
        ],
        "summary": "Загрузка файла в директорию",
        "operationId": "persistOrMoveFileToDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор папки в которую перемещается файл",
            "name": "DirectoryID",
            "in": "query",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "files": {
                  "description": "Файлы, которые необходимо переместить",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/requestFile"
                  },
                  "x-go-name": "Files"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "операция удачно завершена"
          },
          "402": {
            "description": "на диске закончилось место"
          },
          "403": {
            "description": "доступ для создания файла запрещен"
          },
          "409": {
            "description": "невозможно создать уникальное имя для файла"
          },
          "default": {
            "$ref": "#/responses/diskFilePersistToDirectoryResponse"
          }
        }
      }
    },
    "/disk/file/upload": {
      "post": {
        "description": "Загрузка файла на временное хранение.\nДля загрузки необходимо сгенерировать uuid и передать его в качестве уникального хеш значения для тела файла.\nДля загрузки файла целиком передается заголовок Content-Range: 0-1000/1000 и загружается полностью.\nВозможно загрузка по частям, для этого файл должен быть разбит на равные части не меньше 5 мегабайт, кроме последней, остаток может иметь любой размер.\nОповестить сервер о том, какая из частей загружается можно заголовком Content-Range.\nЗаголовок задается по шаблону: \u003cb\u003ebytes \u003crange-start\u003e-\u003crange-end\u003e\\/\\\u003csize\u003e\u003c/b\u003e, например:\nbytes: 0-100/1000 для загрузки первой части в сто байт для файла размером 1000 байт и 101-200/1000 для загрузки второй части файла.\nДалее необходимо, инициализировать файл иначе он будет удален, как не нужный. Инициализировать файл можно, с помощью endpoint'а /disk/file/move поместив его в директорию\nили сохранить в приложении.",
        "consumes": [
          "binary/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "disk"
        ],
        "summary": "Загрузка файла",
        "operationId": "uploadPart",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Hash",
            "description": "хэш файла, который будет загружаться по частям",
            "name": "hash",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Файл загружен полностью"
          },
          "206": {
            "description": "Часть файла загружена успешно"
          },
          "400": {
            "description": "Ошибка отображается в формате сообщения, описывающего проблему. Также текст ошибки может содержать следующие коды \u003ci\u003eEntityTooSmall\u003c/\u003e файл разбит на слишком маленькие части, \u003ci\u003eInvalidPart\u003c/i\u003e одна из частей не найдена в хранилище, \u003ci\u003eInvalidPartOrder\u003c/i\u003e неверный порядок частей в файле, \u003ci\u003eNoSuchUpload\u003c/i\u003e загрузка не найдена"
          },
          "default": {
            "$ref": "#/responses/responseUploadPart"
          }
        }
      }
    },
    "/disk/file/{id}/get-link": {
      "get": {
        "description": "Получение ссылки на скачивание файла по идентификатору файла",
        "produces": [
          "application/json"
        ],
        "tags": [
          "disk"
        ],
        "operationId": "handlerGetLinkGET",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "ID - идентификатор файла",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/HandlerGetLinkResponse"
          }
        }
      },
      "post": {
        "description": "Получение ссылки на скачивание файла по идентификатору файла",
        "produces": [
          "application/json"
        ],
        "tags": [
          "disk"
        ],
        "operationId": "handlerGetLink",
        "deprecated": true,
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ID",
            "description": "ID - идентификатор файла",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/HandlerGetLinkResponse"
          }
        }
      }
    },
    "/help": {
      "post": {
        "description": "Вывод документации API в формате OpenAPI (Swagger 2)",
        "produces": [
          "application/json"
        ],
        "operationId": "help",
        "responses": {
          "200": {
            "$ref": "#/responses/HelpResponse"
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "description": "Получение списка пользователей согласно условиям фильтрации.\nУсловия передаются в виде JSON-сериализованного объекта в параметре listparams.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Получение списка пользователей",
        "operationId": "userListGET",
        "parameters": [
          {
            "type": "string",
            "description": "Параметры фильтрации",
            "name": "listparams",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ListUserResponse"
          }
        }
      },
      "post": {
        "description": "Получение списка пользователей",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "userListPOST",
        "deprecated": true,
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "filter": {
                  "description": "Фильтрация",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "x-go-name": "Filter"
                },
                "from": {
                  "description": "Начальный индекс (offset) возвращаемых элементов.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "From"
                },
                "ids": {
                  "description": "Фильтрация по идентификаторам",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "Ids"
                },
                "size": {
                  "description": "Количество возвращаемых элементов (максимум 100)",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Size"
                },
                "sortExpressions": {
                  "description": "Правила сортировки",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SortExpression"
                  },
                  "x-go-name": "SortExpressions"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ListUserResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "AppFields": {
      "description": "easyjson:json",
      "title": "AppFields описывает массив полей приложения",
      "$ref": "#/definitions/Fields"
    },
    "AppView": {
      "description": "AppView -\neasyjson:json",
      "type": "object",
      "properties": {
        "__createdAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "__createdBy": {
          "$ref": "#/definitions/UUID"
        },
        "__deletedAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "DeletedAt"
        },
        "__id": {
          "$ref": "#/definitions/UUID"
        },
        "__updatedAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "UpdatedAt"
        },
        "__updatedBy": {
          "$ref": "#/definitions/UUID"
        },
        "code": {
          "type": "string",
          "x-go-name": "Code"
        },
        "elementName": {
          "type": "string",
          "x-go-name": "ElementName"
        },
        "fields": {
          "$ref": "#/definitions/AppFields"
        },
        "filters": {
          "$ref": "#/definitions/Filters"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "$ref": "#/definitions/Namespace"
        },
        "settings": {
          "type": "object",
          "x-go-name": "Settings"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "git.elewise.com/elma365/main/internal/app/model"
    },
    "Field": {
      "description": "easyjson:json\nnolint: maligned // поля сгруппированы по смыслу, поэтому этот линтер отключен",
      "type": "object",
      "title": "Field is a definition of application field",
      "properties": {
        "array": {
          "type": "boolean",
          "x-go-name": "Array"
        },
        "calcByFormula": {
          "type": "boolean",
          "x-go-name": "CalcByFormula"
        },
        "code": {
          "type": "string",
          "x-go-name": "Code"
        },
        "data": {
          "type": "object",
          "x-go-name": "Data"
        },
        "defaultValue": {
          "type": "object",
          "x-go-name": "Default"
        },
        "deleted": {
          "type": "boolean",
          "x-go-name": "Deleted"
        },
        "formula": {
          "type": "string",
          "x-go-name": "Formula"
        },
        "indexed": {
          "type": "boolean",
          "x-go-name": "Indexed"
        },
        "required": {
          "type": "boolean",
          "x-go-name": "Required"
        },
        "searchable": {
          "type": "boolean",
          "x-go-name": "Searchable"
        },
        "single": {
          "description": "Поле c признаком `Array` может хранить как множество, так и одно значение\n(например для типов Phone, Email, Application) для удобства быстрого переключения\nотображения значений с конструкторе формы и исключения преобразования формата\nхраненияф данных. Признак `Single` как раз и определяет сколько элементов хранится в\nполе типа массив.\n\nRefactoring: поле стоит переименовать в ArrayWithSingleItem",
          "type": "boolean",
          "x-go-name": "Single"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "view": {
          "$ref": "#/definitions/FieldView"
        }
      },
      "x-go-package": "git.elewise.com/elma365/common/pkg/types"
    },
    "FieldView": {
      "description": "easyjson:json",
      "type": "object",
      "title": "FieldView - данные для представления значения поля или контролов для поля",
      "properties": {
        "data": {
          "type": "object",
          "x-go-name": "Data"
        },
        "disabled": {
          "type": "boolean",
          "x-go-name": "Disabled"
        },
        "hidden": {
          "type": "boolean",
          "x-go-name": "Hidden"
        },
        "input": {
          "type": "boolean",
          "x-go-name": "Input"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "output": {
          "type": "boolean",
          "x-go-name": "Output"
        },
        "sort": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Sort"
        },
        "system": {
          "type": "boolean",
          "x-go-name": "System"
        },
        "tooltip": {
          "type": "string",
          "x-go-name": "Tooltip"
        },
        "tooltipAsHtml": {
          "type": "boolean",
          "x-go-name": "TooltipAsHTML"
        }
      },
      "x-go-package": "git.elewise.com/elma365/common/pkg/types"
    },
    "Fields": {
      "description": "easyjson:json",
      "type": "array",
      "title": "Fields is slice of fields",
      "items": {
        "$ref": "#/definitions/Field"
      },
      "x-go-package": "git.elewise.com/elma365/common/pkg/types"
    },
    "Filter": {
      "description": "easyjson:json",
      "type": "object",
      "title": "Filter описывает объект фильтра приложения",
      "properties": {
        "__createdAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "__id": {
          "$ref": "#/definitions/UUID"
        },
        "directory": {
          "$ref": "#/definitions/UUID"
        },
        "handlerCode": {
          "type": "string",
          "x-go-name": "HandlerCode"
        },
        "inTrash": {
          "type": "boolean",
          "x-go-name": "InTrash"
        },
        "isSystem": {
          "type": "boolean",
          "x-go-name": "IsSystem"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "values": {
          "type": "object",
          "x-go-name": "Values"
        },
        "viewPlace": {
          "$ref": "#/definitions/ViewPlace"
        }
      },
      "x-go-package": "git.elewise.com/elma365/main/internal/app/model"
    },
    "Filters": {
      "description": "easyjson:json",
      "type": "array",
      "title": "Filters описывает массив фильтров приложения",
      "items": {
        "$ref": "#/definitions/Filter"
      },
      "x-go-package": "git.elewise.com/elma365/main/internal/app/model"
    },
    "Namespace": {
      "description": "Namespace - тип для пространства имен",
      "type": "string",
      "x-go-package": "git.elewise.com/elma365/common/pkg/namespace"
    },
    "Result": {
      "description": "Result описывает результат запроса списка элементов\neasyjson:json",
      "type": "object",
      "properties": {
        "result": {
          "description": "Найденные элементы",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-go-name": "Items"
        },
        "total": {
          "description": "Всего элементов",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Total"
        }
      },
      "x-go-package": "git.elewise.com/elma365/main/internal/common/list"
    },
    "SortExpression": {
      "description": "SortExpression contains field name and direction for sorting",
      "type": "object",
      "properties": {
        "ascending": {
          "description": "Признак сортировки по возрастанию",
          "type": "boolean",
          "x-go-name": "Ascending"
        },
        "field": {
          "description": "Поле сортировки",
          "type": "string",
          "x-go-name": "Field"
        }
      },
      "x-go-package": "git.elewise.com/elma365/main/internal/common/queries"
    },
    "Type": {
      "description": "Type is an enum of available types",
      "type": "integer",
      "format": "int64",
      "x-go-package": "git.elewise.com/elma365/common/pkg/types"
    },
    "UUID": {
      "description": "UUID representation compliant with specification\ndescribed in RFC 4122.",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "github.com/satori/go.uuid"
    },
    "ViewPlace": {
      "description": "ViewPlace место отображения фильтра",
      "type": "integer",
      "format": "int8",
      "x-go-package": "git.elewise.com/elma365/main/internal/app/model"
    },
    "appGetStatusResponseItem": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Код варианта статуса.",
          "type": "string",
          "x-go-name": "Code"
        },
        "id": {
          "description": "Идентификатор варианта статуса.",
          "type": "integer",
          "format": "uint32",
          "x-go-name": "ID"
        },
        "name": {
          "description": "Наименование варианта статуса.",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-name": "responseItem",
      "x-go-package": "git.elewise.com/elma365/main/internal/api/v1/handlers/app"
    },
    "context": {
      "description": "Контекст Бизнес-процесса",
      "type": "object",
      "x-go-name": "Context",
      "x-go-package": "git.elewise.com/elma365/main/internal/api/v1/models"
    },
    "data": {
      "description": "Данные",
      "type": "object",
      "x-go-name": "Data",
      "x-go-package": "git.elewise.com/elma365/main/internal/api/v1/models"
    },
    "file": {
      "description": "Файл",
      "type": "object",
      "properties": {
        "__createdAt": {
          "description": "Дата создания",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "__createdBy": {
          "$ref": "#/definitions/UUID"
        },
        "__deletedAt": {
          "description": "Дата удаления",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DeletedAt"
        },
        "__id": {
          "$ref": "#/definitions/UUID"
        },
        "__updatedAt": {
          "description": "Дата последнего редактирования",
          "type": "string",
          "format": "date-time",
          "x-go-name": "UpdatedAt"
        },
        "__updatedBy": {
          "$ref": "#/definitions/UUID"
        },
        "comment": {
          "description": "Комментарий",
          "type": "string",
          "x-go-name": "Comment"
        },
        "directory": {
          "$ref": "#/definitions/UUID"
        },
        "name": {
          "description": "Имя файла в системе",
          "type": "string",
          "x-go-name": "Name"
        },
        "originalName": {
          "description": "Имя загруженного файла",
          "type": "string",
          "x-go-name": "OriginalName"
        },
        "size": {
          "description": "Размер",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Size"
        },
        "version": {
          "description": "Версия файла",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Version"
        }
      },
      "x-go-name": "File",
      "x-go-package": "git.elewise.com/elma365/main/internal/api/v1/models"
    },
    "item": {
      "description": "Объект",
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "x-go-name": "Item",
      "x-go-package": "git.elewise.com/elma365/main/internal/api/v1/models"
    },
    "requestFile": {
      "type": "object",
      "required": [
        "hash"
      ],
      "properties": {
        "hash": {
          "$ref": "#/definitions/UUID"
        },
        "name": {
          "description": "имя файла\n\ntype: string",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "git.elewise.com/elma365/main/internal/api/v1/handlers/disk-file"
    }
  },
  "responses": {
    "AppGetResponse": {
      "description": "Модель ответа запрашиваемого приложения.",
      "schema": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/definitions/AppView"
          },
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "AppItemCreateResponse": {
      "description": "Модель ответа создания элемента.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "item": {
            "$ref": "#/definitions/item"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "AppItemGetResponse": {
      "description": "Модель ответа для запроса элемента приложения.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "item": {
            "$ref": "#/definitions/item"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "AppItemSetStatusResponse": {
      "description": "Модель элемента приложения с установленным статусом.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "item": {
            "$ref": "#/definitions/item"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "AppItemUpdateResponse": {
      "description": "Модель измененного элемента.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "item": {
            "$ref": "#/definitions/item"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "AppListResponse": {
      "description": "Модель списка элементов приложения.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "result": {
            "$ref": "#/definitions/Result"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "BpmInstanceGetResponse": {
      "description": "Модель экземпляра процесса.",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/data"
          },
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "BpmInstanceListResponse": {
      "description": "Модель списка экземпляров процесса.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "result": {
            "$ref": "#/definitions/Result"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "BpmInstanceTargetListResponse": {
      "description": "Модель списка экземпляров процесса.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "result": {
            "$ref": "#/definitions/Result"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "BpmRestorePointRestoreResponse": {
      "description": "Модель ответа.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "BpmTemplateListResponse": {
      "description": "Модель списка опубликованных процессов.",
      "schema": {
        "type": "object",
        "properties": {
          "context": {
            "$ref": "#/definitions/context"
          },
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "BpmTemplateRunResponse": {
      "description": "Модель контекста запущенного процесса.",
      "schema": {
        "type": "object",
        "properties": {
          "context": {
            "$ref": "#/definitions/context"
          },
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "DiskFileUploadResponse": {
      "description": "ответ сервера после загрузки файла в директорию",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "file": {
            "$ref": "#/definitions/file"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "HandlerGetLinkResponse": {
      "description": "Модель ссылки для скачивания.",
      "schema": {
        "type": "object",
        "properties": {
          "Link": {
            "description": "Ссылка",
            "type": "string"
          },
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "HelpResponse": {
      "description": "Модель описания API.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "help": {
            "description": "Документация в формате OpenAPI (Swagger 2)",
            "type": "object",
            "x-go-name": "Help"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "ListUserResponse": {
      "description": "Модель списка пользователей.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "result": {
            "$ref": "#/definitions/Result"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "appGetStatusResponse": {
      "description": "Модель ответа запрашиваемого статуса.",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "statusItems": {
            "description": "Варианты статуса.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/appGetStatusResponseItem"
            },
            "x-go-name": "StatusItems"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "diskFilePersistToDirectoryResponse": {
      "description": "ответ сервера, при перемещении файла в папку",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "files": {
            "description": "Файлы",
            "type": "array",
            "items": {
              "$ref": "#/definitions/file"
            },
            "x-go-name": "Files"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    },
    "responseUploadPart": {
      "description": "ответ после загрузки одной из частей файла",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Текст ошибки если success == false",
            "type": "string",
            "x-go-name": "Error"
          },
          "hash": {
            "description": "Идентификатор файла, загруженный в хранилище\n\ntype: string\nformat: uuid",
            "type": "string",
            "x-go-name": "Hash",
            "example": "a35cd8de-0c73-4f6a-8218-90193d02e2e0"
          },
          "success": {
            "description": "Признак успешного запроса",
            "type": "boolean",
            "x-go-name": "Success"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "X-Token",
      "in": "header"
    },
    "bearer_token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    },
    {
      "bearer_token": []
    }
  ],
  "tags": [
    {
      "description": "Работа с приложениями",
      "name": "app"
    },
    {
      "description": "Работа с бизнес-процессами",
      "name": "bpm"
    },
    {
      "description": "Работа с файлами",
      "name": "disk"
    },
    {
      "description": "Работа с пользователями",
      "name": "user"
    }
  ]
}